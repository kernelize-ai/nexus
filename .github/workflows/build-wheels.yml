name: Build Wheels

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [cuda-runner, macos-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          apt-get update
          apt-get install -y build-essential cmake ninja python3 python3-dev python3-pip python3-pybind11 python-is-python3
          apt-get install -y libc++-dev libc++abi-dev git libboost-fiber-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew uninstall cmake || true
          brew install cmake ninja python@3.11 pybind11 boost

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_SKIP: "*-musllinux_* pp*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          # Install build dependencies in the build environment
          CIBW_BEFORE_BUILD: |
            pip install -r requirements.txt
          # Set environment variables for build
          CIBW_ENVIRONMENT: "MAX_JOBS=4"
          # Test the wheel after building (optional - can be disabled if tests don't run well in isolation)
          CIBW_TEST_COMMAND: "python -c 'import nexus; print(nexus.__file__)'"
          CIBW_TEST_SKIP: "*"
          # Build in parallel
          CIBW_BUILD_VERBOSITY: 1

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          retention-days: 30

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          retention-days: 30

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

